<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLimpadig.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANUAAACFCAYAAADMzr10AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAAE/lJREFUeF7tnWeTHEUWRfdf4b23wnsnAi9AOIEgiEAS3oNwEgIkCBCB9wTCGwmE
        J4QTSHgjvBXmW+6e3L29OUV1z/RMVVfW9P1worpnuqqrM9/N9/KlqX+tXbs2GGOqw6IypmIsKmMqxqIy
        pmIsKmMqxqIypmIsKmMqxqIypmIsKmMqxqIypmIsKmMqxqIypmIsKmMqxqIypmIsKmMqxqIypmIsKmMq
        xqIypmIsKmMqxqIypmIsKmMqxqIypmIsKmMqxqIypmIsKmMqxqLqwR9//NE5/vbbb+H333+P7//888/4
        N1MPlDFlrfJO66INWFQ9UKUiqL/++mvE30y9SFRpY6a/FT+bGxbVKPz666/hxx9/DJ999llYvXp1+OCD
        DyKrVq0KH374oakJyhc++uij8NVXX4UffvhhhLiK9ZQTFlUXaCGpzBdffDEsWLAgzJgxIxx00EFhv/32
        i+y///6mRihjyvuoo44KZ599drj33nvDe++9N0JcuWJRFSB2//nnn8Mbb7wRLrvssrDrrruGDTbYIKy/
        /vphvfXWi0e952jqgfJNy3rzzTcPRx99dBTXF198ERu9svrLAYuqwC+//BK904knnhg23XTTWKkbbrhh
        rNh11123U8lpxZv6oOyB8qZRmzJlSowcEBb1lWMCw6JKwEMtW7YsTJ8+PQqKSqUyYYsttgg777xz2Guv
        vcIee+wR9txzT1Mzu+++e9huu+3CRhttNCJK2GmnncLixYvDt99+m2UoaFH9DzzUSy+9FE466aSw2Wab
        dcREhR588MHh8ssvD3fddVd46KGHwoMPPhiPpj4efvjhcP/994dFixaFmTNnxgZNEQPQ73rttddivZXV
        Z5NYVP8BD7V8+fJwyimnRI+kFnHjjTcOxx9/fHjqqafCd999V3quqRdEs3LlynDdddeFXXbZJdYL4qKx
        u/LKK6O3KjuvSYZeVFSaBEVnWC0hlXbcccdF78Vn2jT4OBkgrEtDu08//TScd955nUaP+jnggANi+j23
        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
</value>
  </data>
</root>